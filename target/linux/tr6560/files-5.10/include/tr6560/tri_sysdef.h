/*
 */

#ifndef __TRI_SYSDEF_H__
#define __TRI_SYSDEF_H__

#ifdef __cplusplus
#if __cplusplus
extern "C" {
#endif
#endif /* __cplusplus */

/*
 * 系统高层次协议定义
 * -------------------------------------------
 * 31    -   27   -  23  -  15   -    7   -     0
 * | precode(0xF) | system | mod  | submod | cmdtype |
 * -------------------------------------------
 * 系统全局返回码定义
 * -------------------------------------------
 * 31    -   27   -  23  -  15   -    7   -     0
 * | precode(0xE) | system | mod  | submod | retcode |
 */
#define TRI_PRECODE_MAX      0xF  /* 最大前导码数 */
#define TRI_SYSTEM_MAX       0xFF /* 最大系统数 */
#define TRI_SRCMODULE_MAX    0xFF /* 最大模块数 */
#define TRI_SUBMODULE_MAX    0xFF /* 最大子模块数 */
#define TRI_RETCODE_MAX      0xFF /* 最大返回码数 */
#define TRI_PRECODE_MASK     0xF  /* 获取前导码掩码 */
#define TRI_SYSTEM_MASK      0xFF /* 获取系统掩码 */
#define TRI_SRCMODULE_MASK   0xFF /* 获取模块掩码 */
#define TRI_SUBMODULE_MASK   0xFF /* 获取子模块掩码 */
#define TRI_RETCODE_MASK     0xFF /* 获取返回值掩码 */
#define TRI_CMDTYPE_MASK     0xFF /* 获取命令数掩码 */
#define TRI_PRECODE_OFFSET   28   /* 获取前导码偏移值 */
#define TRI_SYSTEM_OFFSET    24   /* 获取系统偏移值 */
#define TRI_SRCMODULE_OFFSET 16   /* 获取模块偏移值 */
#define TRI_SUBMODULE_OFFSET 8    /* 获取子模块偏移值 */

enum tri_sysbase_e {
	TRI_SYSBASE_KBASIC = 0xF1000000,   /* 内核基本类库系统 */
	TRI_SYSBASE_DRIVER = 0xF2000000,   /* 内核驱动系统 */
	TRI_SYSBASE_SOC = 0xF3000000,      /* 内核SOC适配系统 */
	TRI_SYSBASE_CFE = 0xF4000000,      /* 内核CFE数据快速转发硬件适配模块 */
	TRI_SYSBASE_HAL = 0xF5000000,      /* 内核硬件抽象层 */
	TRI_SYSBASE_KWIFI = 0xF6000000,    /* 内核wifi诊断模块 */
	TRI_SYSBASE_PONLINK = 0xF9000000,  /* Pon 系统 */
	TRI_SYSBASE_MNG = 0xFA000000,      /* 用户态manage */
	TRI_SYSBASE_HSUP = 0xFB000000,     /* 用户态none通用业务平台platform */
	TRI_SYSBASE_SYSTEM = 0xFC000000,   /* 用户态system */
	TRI_SYSBASE_PROTOCOL = 0xFD000000, /* 内核协议模块 */
	TRI_SYSBASE_DFX = 0xFE000000,      /* dfx */
};

enum tri_kprotocol_e {
	TRI_SRCMODULE_PROTOCOL_MC = (TRI_SYSBASE_PROTOCOL | 0x00010000),
};

enum tri_kbasic_e {
	TRI_SRCMODULE_KBASIC_DEV = (TRI_SYSBASE_KBASIC | 0x00010000),
	TRI_SRCMODULE_KBASIC_HLP = (TRI_SYSBASE_KBASIC | 0x00020000),
	TRI_SRCMODULE_KBASIC_LOG = (TRI_SYSBASE_KBASIC | 0x00030000),
	TRI_SRCMODULE_KBASIC_MSG = (TRI_SYSBASE_KBASIC | 0x00040000),
	TRI_SRCMODULE_KBASIC_NETLINK = (TRI_SYSBASE_KBASIC | 0x00050000),
	TRI_SRCMODULE_KBASIC_OS = (TRI_SYSBASE_KBASIC | 0x00060000),
	TRI_SRCMODULE_KBASIC_QUEUE = (TRI_SYSBASE_KBASIC | 0x00070000),
	TRI_SRCMODULE_KBASIC_TIMER = (TRI_SYSBASE_KBASIC | 0x00080000),
	TRI_SRCMODULE_KBASIC_HSAH = (TRI_SYSBASE_KBASIC | 0x00090000),
	TRI_SRCMODULE_KBASIC_DISP = (TRI_SYSBASE_KBASIC | 0x000A0000),
};

enum tri_driver_e {
	TRI_SRCMODULE_KDRIVER_LED = (TRI_SYSBASE_DRIVER | 0x00001000),
	TRI_SRCMODULE_KDRIVER_LSW = (TRI_SYSBASE_DRIVER | 0x00002000),
	TRI_SRCMODULE_KDRIVER_SLIC = (TRI_SYSBASE_DRIVER | 0x00003000),
	TRI_SRCMODULE_KDRIVER_PHY = (TRI_SYSBASE_DRIVER | 0x00004000),
	TRI_SRCMODULE_KDRIVER_EXT_PHY = (TRI_SYSBASE_DRIVER | 0x00004100),
	TRI_SRCMODULE_KDRIVER_PORT = (TRI_SYSBASE_DRIVER | 0x00005000),
	TRI_SRCMODULE_KDRIVER_VOIP = (TRI_SYSBASE_DRIVER | 0x00006000),
	TRI_SRCMODULE_KDRIVER_CODEC = (TRI_SYSBASE_DRIVER | 0x00007000),
	TRI_SRCMODULE_KDRIVER_MPCP = (TRI_SYSBASE_DRIVER | 0x00008000),
	TRI_SRCMODULE_KDRIVER_PLOAM = (TRI_SYSBASE_DRIVER | 0x00009000),
};

enum tri_ksoc_e {
	TRI_KSOC_SDK_L0 = (TRI_SYSBASE_SOC | 0x00001000),
	TRI_KSOC_SDK_L1 = (TRI_SYSBASE_SOC | 0x00003000),
	TRI_KSOC_SDK_L2 = (TRI_SYSBASE_SOC | 0x00005000),
	TRI_KSOC_SDK_L3 = (TRI_SYSBASE_SOC | 0x00007000),
	TRI_KSOC_DFX = (TRI_SYSBASE_SOC | 0x00008000),

};

enum tri_ksoc_l1_submod_e {
	TRI_KSOC_SDK_L1_EMAC_DIO = (TRI_KSOC_SDK_L1 + 0x00000100),
	TRI_KSOC_SDK_L1_EQM_DIO = (TRI_KSOC_SDK_L1 + 0x00000200),
	TRI_KSOC_SDK_L1_IFC_DIO = (TRI_KSOC_SDK_L1 + 0x00000300),
	TRI_KSOC_SDK_L1_IPS_PON_DIO = (TRI_KSOC_SDK_L1 + 0x00000400),
	TRI_KSOC_SDK_L1_L2_DIO = (TRI_KSOC_SDK_L1 + 0x00000500),
	TRI_KSOC_SDK_L1_L3_DIO = (TRI_KSOC_SDK_L1 + 0x00000600),
	TRI_KSOC_SDK_L1_MCC_DIO = (TRI_KSOC_SDK_L1 + 0x00000700),
	TRI_KSOC_SDK_L1_NAPT_DIO = (TRI_KSOC_SDK_L1 + 0x00000800),
	TRI_KSOC_SDK_L1_OFC_DIO = (TRI_KSOC_SDK_L1 + 0x00000900),
	TRI_KSOC_SDK_L1_OPP_DIO = (TRI_KSOC_SDK_L1 + 0x00000A00),
	TRI_KSOC_SDK_L1_PA_DIO = (TRI_KSOC_SDK_L1 + 0x00000B00),
	TRI_KSOC_SDK_L1_PFE_DIO = (TRI_KSOC_SDK_L1 + 0x00000C00),
	TRI_KSOC_SDK_L1_PUB_DIO = (TRI_KSOC_SDK_L1 + 0x00000D00),
	TRI_KSOC_SDK_L1_XEMAC_DIO = (TRI_KSOC_SDK_L1 + 0x00000E00),
	TRI_KSOC_SDK_L1_XGLB_TAB = (TRI_KSOC_SDK_L1 + 0x00000F00),
};

enum tri_ksoc_l2_submod_e {
	TRI_KSOC_SDK_L2_ETH = (TRI_KSOC_SDK_L2 + 0x00000100),
	TRI_KSOC_SDK_L2_GPIO = (TRI_KSOC_SDK_L2 + 0x00000200),
	TRI_KSOC_SDK_L2_HW = (TRI_KSOC_SDK_L2 + 0x00000300),
	TRI_KSOC_SDK_L2_I2C = (TRI_KSOC_SDK_L2 + 0x00000400),
	TRI_KSOC_SDK_L2_LSW = (TRI_KSOC_SDK_L2 + 0x00000500),
	TRI_KSOC_SDK_L2_OPTICAL = (TRI_KSOC_SDK_L2 + 0x00000600),
	TRI_KSOC_SDK_L2_PIE = (TRI_KSOC_SDK_L2 + 0x00000700),
	TRI_KSOC_SDK_L2_PON = (TRI_KSOC_SDK_L2 + 0x00000800),
	TRI_KSOC_SDK_L2_SCI = (TRI_KSOC_SDK_L2 + 0x00000900),
	TRI_KSOC_SDK_L2_SERDES = (TRI_KSOC_SDK_L2 + 0x00000A00),
	TRI_KSOC_SDK_L2_SPI = (TRI_KSOC_SDK_L2 + 0x00000B00),
	TRI_KSOC_SDK_L2_UTIL = (TRI_KSOC_SDK_L2 + 0x00000C00),
	TRI_KSOC_SDK_L2_SYSTEM = (TRI_KSOC_SDK_L2 + 0x00000D00),
	TRI_KSOC_SDK_L2_VOIP = (TRI_KSOC_SDK_L2 + 0x00000E00),
	TRI_KSOC_SDK_L2_MPCP = (TRI_KSOC_SDK_L2 + 0x00000F00),
	TRI_KSOC_SDK_L2_PLOAM = (TRI_KSOC_SDK_L2 + 0x00001000),
	TRI_KSOC_SDK_L2_XPLOAM = (TRI_KSOC_SDK_L2 + 0x00001100),
	TRI_KSOC_SDK_L2_OAM = (TRI_KSOC_SDK_L2 + 0x00001200),
	TRI_KSOC_SDK_L2_DYINGGASP = (TRI_KSOC_SDK_L2 + 0x00001300),
	TRI_KSOC_SDK_L2_SCRTY = (TRI_KSOC_SDK_L2 + 0x00001400),
	TRI_KSOC_SDK_L2_INTF = (TRI_KSOC_SDK_L2 + 0x00001500),
};

enum tri_ksoc_l2_lsw_submod_e {
	TRI_KSOC_SDK_L2_LSW_CFE_ADPT = (TRI_KSOC_SDK_L2_LSW | 0x00000001),
	TRI_KSOC_SDK_L2_LSW_CNT = (TRI_KSOC_SDK_L2_LSW | 0x00000002),
	TRI_KSOC_SDK_L2_LSW_IFLOW = (TRI_KSOC_SDK_L2_LSW | 0x00000003),
	TRI_KSOC_SDK_L2_LSW_L2 = (TRI_KSOC_SDK_L2_LSW | 0x00000004),
	TRI_KSOC_SDK_L2_LSW_L3 = (TRI_KSOC_SDK_L2_LSW | 0x00000005),
	TRI_KSOC_SDK_L2_LSW_MAP = (TRI_KSOC_SDK_L2_LSW | 0x00000006),
	TRI_KSOC_SDK_L2_LSW_MC = (TRI_KSOC_SDK_L2_LSW | 0x00000007),
	TRI_KSOC_SDK_L2_LSW_NNI = (TRI_KSOC_SDK_L2_LSW | 0x00000008),
	TRI_KSOC_SDK_L2_LSW_OAM = (TRI_KSOC_SDK_L2_LSW | 0x00000009),
	TRI_KSOC_SDK_L2_LSW_OFLOW = (TRI_KSOC_SDK_L2_LSW | 0x0000000A),
	TRI_KSOC_SDK_L2_LSW_PDU = (TRI_KSOC_SDK_L2_LSW | 0x0000000B),
	TRI_KSOC_SDK_L2_LSW_PRBS = (TRI_KSOC_SDK_L2_LSW | 0x0000000C),
	TRI_KSOC_SDK_L2_LSW_QOS = (TRI_KSOC_SDK_L2_LSW | 0x0000000D),
	TRI_KSOC_SDK_L2_LSW_SEC = (TRI_KSOC_SDK_L2_LSW | 0x0000000E),
	TRI_KSOC_SDK_L2_LSW_UNI = (TRI_KSOC_SDK_L2_LSW | 0x0000000F),
};

enum tri_ksoc_l2_scrty_submod_e {
	TRI_KSOC_SDK_L2_SCRTY_ANTIDOS = (TRI_KSOC_SDK_L2_SCRTY | 0x00000001),
	TRI_KSOC_SDK_L2_SCRTY_TZPC = (TRI_KSOC_SDK_L2_SCRTY | 0x00000002),
	TRI_KSOC_SDK_L2_SCRTY_SEC = (TRI_KSOC_SDK_L2_SCRTY | 0x00000003),
	TRI_KSOC_SDK_L2_SCRTY_PKE = (TRI_KSOC_SDK_L2_SCRTY | 0x00000004),
	TRI_KSOC_SDK_L2_SCRTY_TZASC = (TRI_KSOC_SDK_L2_SCRTY | 0x00000005),
	TRI_KSOC_SDK_L2_SCRTY_TZONE = (TRI_KSOC_SDK_L2_SCRTY | 0x00000006),
};

enum tri_ksoc_l3_submod_e {
	TRI_KSOC_SDK_L3_CFE = (TRI_KSOC_SDK_L3 + 0x00000100),
	TRI_KSOC_SDK_L3_LSW = (TRI_KSOC_SDK_L3 + 0x00000200),
	TRI_KSOC_SDK_L3_PON = (TRI_KSOC_SDK_L3 + 0x00000300),
	TRI_KSOC_SDK_L3_VOIP = (TRI_KSOC_SDK_L3 + 0x00000400),
};

enum tri_cfe_e {
	TRI_SUBMODULE_CFE_HW = (TRI_SYSBASE_CFE | 0x00010000),
	TRI_SUBMODULE_CFE_FW = (TRI_SYSBASE_CFE | 0x00020000),
	TRI_SUBMODULE_CFE_LRN = (TRI_SYSBASE_CFE | 0x00030000),
	TRI_SUBMODULE_CFE_RES = (TRI_SYSBASE_CFE | 0x00040000),
	TRI_SUBMODULE_CFE_SRV = (TRI_SYSBASE_CFE | 0x00050000),
	TRI_SUBMODULE_CFE_INTF = (TRI_SYSBASE_CFE | 0x00060000),
	TRI_SUBMODULE_CFE_BR = (TRI_SYSBASE_CFE | 0x00070000),
	TRI_SUBMODULE_CFE_ACC = (TRI_SYSBASE_CFE | 0x00080000),
	TRI_SUBMODULE_CFE_PKT = (TRI_SYSBASE_CFE | 0x00090000),
	TRI_SUBMODULE_CFE_MC = (TRI_SYSBASE_CFE | 0x000A0000),
};

enum tri_srv_e {
	TRI_SUBMODULE_CFE_SRV_USB = (TRI_SUBMODULE_CFE_SRV | 0x00000100),
	TRI_SUBMODULE_CFE_SRV_WIFI = (TRI_SUBMODULE_CFE_SRV | 0x00000200),
	TRI_SUBMODULE_CFE_SRV_MARK = (TRI_SUBMODULE_CFE_SRV | 0x00000300),
	TRI_SUBMODULE_CFE_SRV_QOS = (TRI_SUBMODULE_CFE_SRV | 0x00000400),
};

enum tri_system_e {
	TRI_SUBMODULE_SYS_LIBSDK = (TRI_SYSBASE_SYSTEM | 0x00010000),
	TRI_SUBMODULE_SYS_LIBSYS = (TRI_SYSBASE_SYSTEM | 0x00020000),
	TRI_SUBMODULE_SYS_UBASIC = (TRI_SYSBASE_SYSTEM | 0x00030000),
	TRI_SUBMODULE_SYS_WIFI = (TRI_SYSBASE_SYSTEM | 0x00040000),
	TRI_SUBMODULE_SYS_XPON = (TRI_SYSBASE_SYSTEM | 0x00050000),
	TRI_SUBMODULE_SYS_TR069 = (TRI_SYSBASE_SYSTEM | 0x00060000),
};

enum tri_libsys_e {
	TRI_SUBMODULE_LIBSYS_MTD = (TRI_SUBMODULE_SYS_LIBSYS | 0x00000100),
	TRI_SUBMODULE_LIBSYS_ENV = (TRI_SUBMODULE_SYS_LIBSYS | 0x00000200),
};

enum tri_libsdk_e {
	TRI_SUBMODULE_LIBSDK_HAL = (TRI_SUBMODULE_SYS_LIBSDK | 0x00000100),
	TRI_SUBMODULE_LIBSDK_SLIC = (TRI_SUBMODULE_SYS_LIBSDK | 0x00000200),
	TRI_SUBMODULE_LIBSDK_VOIP = (TRI_SUBMODULE_SYS_LIBSDK | 0x00000300),
	TRI_SUBMODULE_LIBSDK_OPTICAL = (TRI_SUBMODULE_SYS_LIBSDK | 0x00000400),
};

enum tri_hsup_e {
	TRI_SUBMODULE_HSUP_CFG = (TRI_SYSBASE_HSUP | 0x00010000),
	TRI_SUBMODULE_HSUP_DB = (TRI_SYSBASE_HSUP | 0x00030000),
	TRI_SUBMODULE_HSUP_MNG = (TRI_SYSBASE_HSUP | 0x00040000),
	TRI_SUBMODULE_HSUP_SRV = (TRI_SYSBASE_HSUP | 0x00050000),
	TRI_SUBMODULE_HSUP_UCI = (TRI_SYSBASE_HSUP | 0x00060000),
	TRI_SUBMODULE_HSUP_UTIL = (TRI_SYSBASE_HSUP | 0x00070000),
	TRI_SUBMODULE_HSUP_PLUG = (TRI_SYSBASE_HSUP | 0x00080000),
	TRI_SUBMODULE_HSUP_UCISHELL = (TRI_SYSBASE_HSUP | 0x00090000),
};

enum tri_mng_e {
	TRI_SUBMODULE_CLI = (TRI_SYSBASE_MNG | 0x00010000),
	TRI_SUBMODULE_OAM = (TRI_SYSBASE_MNG | 0x00020000),
	TRI_SUBMODULE_OMCI = (TRI_SYSBASE_MNG | 0x00030000),
	TRI_SUBMODULE_TR069 = (TRI_SYSBASE_MNG | 0x00040000),
	TRI_SUBMODULE_WEB = (TRI_SYSBASE_MNG | 0x00050000),
};

#ifdef __cplusplus
#if __cplusplus
}
#endif
#endif /* __cplusplus */

#endif /* __TRI_SYSDEF_H__ */

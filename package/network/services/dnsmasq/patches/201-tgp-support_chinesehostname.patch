diff -aur old/src/lease.c new/src/lease.c
--- old/src/lease.c	2021-09-09 04:21:22.000000000 +0800
+++ new/src/lease.c	2023-09-13 16:22:53.421709618 +0800
@@ -15,12 +15,112 @@
 */
 
 #include "dnsmasq.h"
-
+#include "iconv.h"
 #ifdef HAVE_DHCP
 
 static struct dhcp_lease *leases = NULL, *old_leases = NULL;
 static int dns_dirty, file_dirty, leases_left;
 
+
+int IsUTF8(const void* pBuffer, long size)  
+{  
+        int IsUTF8 = 1;  
+        unsigned char* start = (unsigned char*)pBuffer;  
+        unsigned char* end = (unsigned char*)pBuffer + size;  
+        while (start < end)  
+        {  
+                if (*start < 0x80) // (10000000): 值小于0x80的为ASCII字符    
+                {  
+                        start++;  
+                }  
+                else if (*start < (0xC0)) // (11000000): 值介于0x80与0xC0之间的为无效UTF-8字符    
+                {  
+                        IsUTF8 = 0;  
+                        break;  
+                }  
+                else if (*start < (0xE0)) // (11100000): 此范围内为2字节UTF-8字符    
+                {  
+                        if (start >= end - 1)  
+                        {  
+                                break;  
+                        }  
+
+                        if ((start[1] & (0xC0)) != 0x80)  
+                        {  
+                                IsUTF8 = 0;  
+                                break;  
+                        }  
+
+                        start += 2;  
+                }  
+                else if (*start < (0xF0)) // (11110000): 此范围内为3字节UTF-8字符    
+                {  
+                        if (start >= end - 2)  
+                        {  
+                                break;  
+                        }  
+
+                        if ((start[1] & (0xC0)) != 0x80 || (start[2] & (0xC0)) != 0x80)  
+                        {  
+                                IsUTF8 = 0;  
+                                break;  
+                        }  
+
+                        start += 3;  
+                }  
+                else  
+                {  
+                        IsUTF8 = 0;  
+                        break;  
+                }  
+        }  
+
+        return IsUTF8;  
+}
+/*******************************************************************************
+* 函数名  : getGB2312ToUtf8
+* 描    述  : 转换编码函数
+* 输    入  : - str:
+*               : - len:
+* 输    出  : 无
+* 返回值  : CON_SOK  : 成功
+*                 CON_EFAIL: 失败
+*******************************************************************************/
+int geGBt2312ToUtf8(char *str, size_t len, char *gOut, size_t *outLen)
+{
+	char *in = str;
+	char *out = gOut;
+	size_t slen = len;
+	size_t retlen = *outLen;
+	size_t olen = *outLen;
+    unsigned int ret = 0;
+	long cklen = len;
+
+	if(IsUTF8(str, cklen))
+	{
+      my_syslog(LOG_ERR, _(" UTF8 already(%s) =%s,line= %d\n"),str, __func__,__LINE__);
+      return -1;
+	}
+
+    iconv_t cdOpt = iconv_open("UTF-8", "GBK");  /* GBK就是GB2312扩展版本 GB18030是兼容前两种编码最全 而ANSI是指GB2312 */
+	if(cdOpt <= 0)
+	{
+		my_syslog(LOG_ERR, _(" iconv_open fail =%s,line= %d\n"),__func__,__LINE__);
+		return -1;
+	}
+	ret = iconv(cdOpt, &in, &slen, &out, &olen);
+    if (ret < 0)
+    {
+		my_syslog(LOG_ERR, _("iconv fail= %s, %d\n"),__func__,__LINE__);
+		return -1;
+    }
+	*outLen = retlen - olen;
+
+    iconv_close(cdOpt);
+    return 0;
+}
+
+
 static int read_leases(time_t now, FILE *leasestream)
 {
   unsigned long ei;
@@ -129,7 +229,8 @@
 	   even when sizeof(time_t) == 8 */
 	lease->expires = (time_t)ei;
 #endif
-	
+
+
 	/* set these correctly: the "old" events are generated later from
 	   the startup synthesised SIGHUP. */
 	lease->flags &= ~(LEASE_NEW | LEASE_CHANGED);
@@ -170,10 +271,13 @@
   else
     {
       /* NOTE: need a+ mode to create file if it doesn't exist */
-      leasestream = daemon->lease_stream = fopen(daemon->lease_file, "a+");
+     leasestream = daemon->lease_stream = fopen(daemon->lease_file, "a+");
 
       if (!leasestream)
 	die(_("cannot open or create lease file %s: %s"), daemon->lease_file, EC_FILE);
+   
+	 
+
 
       /* a+ mode leaves pointer at end. */
       rewind(leasestream);
@@ -253,6 +357,7 @@
   struct dhcp_lease *lease;
   time_t next_event;
   int i, err = 0;
+  size_t inlen;
 
   if (file_dirty != 0 && daemon->lease_stream)
     {
@@ -287,8 +392,24 @@
 	  inet_ntop(AF_INET, &lease->addr, daemon->addrbuff, ADDRSTRLEN); 
 
 	  ourprintf(&err, " %s ", daemon->addrbuff);
-	  ourprintf(&err, "%s ", lease->hostname ? lease->hostname : "*");
-	  	  
+	  if(NULL != lease->hostname)
+      {
+		 inlen = strlen(lease->hostname);
+		 char *utf_hostname = whine_malloc(256);
+		 memset(utf_hostname,0,256);
+		 size_t outLen = 255;
+		 if(0 <= geGBt2312ToUtf8(lease->hostname, inlen, utf_hostname, &outLen))
+		 {
+			free(lease->hostname);
+			lease->hostname = utf_hostname;
+		 }
+		 else
+		 {
+			free(utf_hostname);
+		 }
+	   }
+
+	   ourprintf(&err, "%s ", lease->hostname ? lease->hostname : "*");
 	  if (lease->clid && lease->clid_len != 0)
 	    {
 	      for (i = 0; i < lease->clid_len - 1; i++)
diff -aur old/src/util.c new/src/util.c
--- old/src/util.c	2023-09-13 16:23:18.497919927 +0800
+++ new/src/util.c	2023-09-13 16:20:39.504586515 +0800
@@ -143,8 +143,8 @@
 	/* iscntrl only gives expected results for ascii */
 	return 0;
 #if !defined(HAVE_IDN) && !defined(HAVE_LIBIDN2)
-      else if (!isascii((unsigned char)c))
-	return 0;
+//      else if (!isascii((unsigned char)c))
+//	return 0;
 #endif
       else if (c != ' ')
 	{
@@ -184,8 +184,8 @@
 	continue;
       
       /* end of hostname part */
-      if (c == '.')
-	return 1;
+	if (c == '.')
+//	return 1;
       
       return 0;
     }

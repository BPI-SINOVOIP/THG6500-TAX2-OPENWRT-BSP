diff -uprN a/include/net/cfg80211.h b/include/net/cfg80211.h
--- a/include/net/cfg80211.h	2023-08-05 13:07:18.436786022 +0800
+++ b/include/net/cfg80211.h	2023-08-05 12:59:49.396799788 +0800
@@ -7640,6 +7640,22 @@ void cfg80211_cac_event(struct net_devic
 			enum nl80211_radar_event event, gfp_t gfp);
 
 /**
+ * cfg80211_detect_sta_event - unassociated sta check event
+ * @netdev: network device
+ * @mac_addr: sta mac addr
+ * @sig_dbm: signal strength in dBm, or 0 if unknown
+ * @freq: the center frequency (in MHz) of the channel
+ * @gfp: context flags
+ *
+ * This function is called by the driver when Unassociated sta detected.
+ */
+void cfg80211_detect_sta_event(struct net_device *netdev,
+										const u8 *mac_addr,
+										u8 sig_dbm,
+										u8 freq,
+										gfp_t gfp);
+
+/**
  * cfg80211_background_cac_abort - Channel Availability Check offchan abort event
  * @wiphy: the wiphy
  *
diff -uprN a/include/uapi/linux/nl80211.h b/include/uapi/linux/nl80211.h
--- a/include/uapi/linux/nl80211.h	2023-08-05 13:07:18.436786022 +0800
+++ b/include/uapi/linux/nl80211.h	2023-08-05 12:59:49.396799788 +0800
@@ -1444,7 +1444,8 @@ enum nl80211_commands {
 	NL80211_CMD_COLOR_CHANGE_COMPLETED,
 
 	/* add new commands above here */
-
+    NL80211_CMD_STA_DETECTED,
+    
 	/* used to define NL80211_CMD_MAX below */
 	__NL80211_CMD_AFTER_LAST,
 	NL80211_CMD_MAX = __NL80211_CMD_AFTER_LAST - 1
diff -uprN a/net/wireless/mlme.c b/net/wireless/mlme.c
--- a/net/wireless/mlme.c	2023-08-05 13:07:32.084785604 +0800
+++ b/net/wireless/mlme.c	2023-08-05 12:59:32.636800302 +0800
@@ -974,6 +974,20 @@ void cfg80211_cac_event(struct net_devic
 }
 EXPORT_SYMBOL(cfg80211_cac_event);
 
+void cfg80211_detect_sta_event(struct net_device *netdev,
+										const u8 *mac_addr,
+										u8 sig_dbm,
+										u8 freq,
+										gfp_t gfp)
+{
+	struct wireless_dev *wdev = netdev->ieee80211_ptr;
+	struct wiphy *wiphy = wdev->wiphy;
+	struct cfg80211_registered_device *rdev = wiphy_to_rdev(wiphy);
+
+	nl80211_detect_sta_notify(rdev, netdev, mac_addr, sig_dbm, freq, gfp);
+}
+EXPORT_SYMBOL(cfg80211_detect_sta_event);
+
 static void
 __cfg80211_background_cac_event(struct cfg80211_registered_device *rdev,
 				struct wireless_dev *wdev,
diff -uprN a/net/wireless/nl80211.c b/net/wireless/nl80211.c
--- a/net/wireless/nl80211.c	2023-08-05 13:07:32.084785604 +0800
+++ b/net/wireless/nl80211.c	2023-08-05 12:59:32.632800302 +0800
@@ -17906,6 +17906,43 @@ nl80211_radar_notify(struct cfg80211_reg
 	nlmsg_free(msg);
 }
 
+void
+nl80211_detect_sta_notify(struct cfg80211_registered_device *rdev,
+									struct net_device *netdev,
+									const u8 *mac_addr,
+									u8 sig_dbm,
+									u8 freq,
+									gfp_t gfp)
+{
+	struct sk_buff *msg;
+	void *hdr;
+
+	msg = nlmsg_new(NLMSG_DEFAULT_SIZE, gfp);
+	if (!msg)
+		return;
+
+	hdr = nl80211hdr_put(msg, 0, 0, 0, NL80211_CMD_STA_DETECTED);
+	if (!hdr) {
+		nlmsg_free(msg);
+		return;
+	}
+
+	if (nla_put_u32(msg, NL80211_ATTR_IFINDEX, netdev->ifindex) ||
+		nla_put(msg, NL80211_ATTR_MAC, ETH_ALEN, mac_addr) ||
+		nla_put_u8(msg, NL80211_ATTR_WIPHY_FREQ, freq) ||
+		nla_put_u8(msg, NL80211_STA_INFO_SIGNAL, sig_dbm))
+		goto nla_put_failure;
+
+	genlmsg_end(msg, hdr);
+
+	genlmsg_multicast_netns(&nl80211_fam, wiphy_net(&rdev->wiphy), msg, 0,
+				NL80211_MCGRP_MLME, gfp);
+	return;
+
+ nla_put_failure:
+	nlmsg_free(msg);
+}
+
 void cfg80211_sta_opmode_change_notify(struct net_device *dev, const u8 *mac,
 				       struct sta_opmode_info *sta_opmode,
 				       gfp_t gfp)
diff -uprN a/net/wireless/nl80211.h b/net/wireless/nl80211.h
--- a/net/wireless/nl80211.h	2023-08-05 13:07:32.084785604 +0800
+++ b/net/wireless/nl80211.h	2023-08-05 12:59:32.632800302 +0800
@@ -115,6 +115,13 @@ nl80211_radar_notify(struct cfg80211_reg
 		     const struct cfg80211_chan_def *chandef,
 		     enum nl80211_radar_event event,
 		     struct net_device *netdev, gfp_t gfp);
+void
+nl80211_detect_sta_notify(struct cfg80211_registered_device *rdev,
+									struct net_device *netdev,
+									const u8 *mac_addr,
+									u8 sig_dbm,
+									u8 freq,
+									gfp_t gfp);
 
 void nl80211_send_ap_stopped(struct wireless_dev *wdev);
 
